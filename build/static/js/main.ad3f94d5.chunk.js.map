{"version":3,"sources":["components/ContactList.js","components/Filter.js","components/InputForm.js","services/phoneNumbers.js","components/Notification.js","components/App.js","index.js"],"names":["Contact","props","name","number","onClick","deleteFun","id","ContactList","contactsToShow","contacts","filter","contact","toLowerCase","includes","map","key","Filter","value","onChange","InputForm","onSubmit","addObject","className","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","newObject","post","put","delete","Notification","notification","message","App","useState","setContacts","setNewName","setNewNumber","newFilter","setNewFilter","setNotification","hook","phoneNumberService","then","response","data","useEffect","standardError","errorNotificationFunction","setTimeout","event","target","preventDefault","contactObject","sameName","length","msg","confirm","window","console","log","catch","error","concat","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad3f94d5.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Contact = (props) => {\n    return(\n      <div>\n        {props.name}: {props.number} <button onClick={props.deleteFun} name={props.name} id={props.id}>Delete</button>\n      </div>\n    )\n}\n\n\nconst ContactList = (props) => {\n\n  const contactsToShow = props.contacts.filter(\n    contact => contact.name.toLowerCase().includes(props.filter.toLowerCase())\n  )\n\n  const mapper = (contact) => {\n    return(\n      <Contact key={contact.id} id={contact.id} name={contact.name} number={contact.number} deleteFun={props.deleteFun}></Contact>\n    )\n  }\n\n  return(\n    <div> {contactsToShow.map(mapper)} </div>\n  )\n}\n\nexport default ContactList\n","import React from 'react'\n\nconst Filter = (props) => {\n    return(\n       <div> \n         Filter for shown names: <input value={props.value} onChange={props.onChange}/> \n      </div>\n    )\n  }\n\nexport default Filter\n","import React from 'react'\n\nconst InputForm = (props) => {\n  return(\n    <form onSubmit={props.addObject}>\n    <div className='myInput'> Name: <input value={props.newName} onChange={props.handleNameChange}/> </div>\n    <div className='myInput'> Number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </div>\n    <div> <button type=\"submit\">Add</button> </div>\n    </form>\n  )\n}\n\nexport default InputForm\n","import axios from 'axios'\nconst baseUrl = 'https://boiling-lake-60849.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst destroy = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n  }\n\nexport default { getAll, create, update, destroy }","import React from 'react'\n\nconst Notification = (props) => {\n    if (props.notification === null) {\n      return null\n    }\n    return (\n      <div className={props.notification.type}>\n        {props.notification.message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport ContactList from './ContactList'\nimport Filter from './Filter'\nimport InputForm from './InputForm'\nimport phoneNumberService from '../services/phoneNumbers'\nimport Notification from './Notification'\n\n\nconst App = () => {\n\n  // State hooks\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  // Event handlers\n  const handleFilterChange = (event) => { setNewFilter(event.target.value) }\n  const handleNameChange = (event) => { setNewName(event.target.value) }\n  const handleNumberChange = (event) => { setNewNumber(event.target.value) }\n\n  // Effect hook for data loading\n  const hook = () => { phoneNumberService.getAll().then(response => setContacts(response.data)) }\n  useEffect(hook, [])\n\n  // Functions templates for showing messages\n  const messageDisplayTime = 3000 // ms\n  const standardError = {type: 'errorNotification', message: 'Operation failed. Refresh your browser.'}\n  const deleteNotificationFunction = (name) => {\n    setNotification({type: 'deleteNotification', message: `Deleted ${name} from contacts!`})\n    setTimeout(() => {setNotification(null)}, messageDisplayTime)\n  }\n\n  const updateNotificationFunction = (name) => {\n    setNotification({type: 'updateNotification', message: `Updated ${name} in contacts!`})\n    setTimeout(() => {setNotification(null)}, messageDisplayTime)\n  }\n\n  const addNotificationFunction = (name) => {\n    setNotification({type: 'addNotification', message: `Added ${name} to contacts!`})\n    setTimeout(() => {setNotification(null)}, messageDisplayTime)\n  }\n\n  const errorNotificationFunction = () => {\n    setNotification(standardError)\n    setTimeout(() => {setNotification(null)}, messageDisplayTime)\n  }\n\n\n  // Function that is executed on form submission\n  const addContact = (event) => {\n\n    // Create new contact and send it to server\n    event.preventDefault()\n    const contactObject = { name: newName, number: newNumber }\n    const sameName = contacts.filter(contact => contact.name === newName)\n    if (sameName.length > 0) {\n      const msg = `Contact ${newName} is already in the phonebook. Do you want to replace the old contact?`\n      const confirm = window.confirm(msg)\n      console.log('Updating not yet implemented!')\n      if (confirm) {\n        phoneNumberService.update(sameName[0].id, contactObject).then(hook)\n        .then(() => {updateNotificationFunction(newName)}).catch(error => {errorNotificationFunction()})\n      }\n    } else {\n      phoneNumberService.create(contactObject).then(\n        response => {setContacts(contacts.concat(response.data))}\n      ).then(() => {addNotificationFunction(newName)})\n      .catch(error => {errorNotificationFunction()})\n    }\n\n    // Clear form fields\n    setNewName('')\n    setNewNumber('')\n  }\n\n  // Function that is executed when a Delete button is clicked\n  const deleteContact = (event) => {\n    const button = event.target\n    const confirm = window.confirm(`Delete ${button.name}?`);\n    if (confirm) {\n      phoneNumberService.destroy(button.id).then(hook)\n      .then(() => {deleteNotificationFunction(button.name)})\n      .catch(error => {errorNotificationFunction()})\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}></Notification>\n      <Filter value={newFilter} onChange={handleFilterChange}></Filter>\n\n      <h2>Add new</h2>\n      <InputForm\n        addObject={addContact} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}>\n      </InputForm>\n\n      <h2>Numbers</h2>\n      <ContactList contacts={contacts} filter={newFilter} deleteFun={deleteContact}></ContactList>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}